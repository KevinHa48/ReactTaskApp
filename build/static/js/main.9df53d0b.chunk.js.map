{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","description","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","console","log","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9df53d0b.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\n// Note the de-structuring...\nconst Button = ({ color, text, onClick }) => {\n    return (\n        <button\n        onClick = { onClick } \n        style = {{ backgroundColor: color }}\n        className = 'btn'>\n            { text }\n        </button>\n    )\n}\n// Set a default prop for the button\nButton.defaultProps = {\n    color: 'black'\n}\n\n// Enforce type-checking\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func\n}\n\n\nexport default Button","import PropTypes from 'prop-types'\nimport Button from './Button.js'\n\nconst Header = ({ title, onAdd, showAdd }) => { \n    return (\n        <header className = 'header'>\n            <h1>{ title }</h1>\n            <Button color = {showAdd ? 'red' : 'green'} \n            text = {showAdd ? 'Close' : 'Add'}\n            onClick = {onAdd}/>\n\n        </header>\n    )\n}\n\n// Use propTypes to implement type-checking!\nHeader.propTypes = {\n    title: PropTypes.string\n    // title: PropTypes.string.isRequired for mandatory fields\n\n}\n\n// You can embed CSS in to JS:\n// const headingStyle = {\n//     Take note that React is camelCase instead of dashes.\n//     color: 'red',\n//     backgroundColor: 'black'\n// }\n\nexport default Header","// We treat React-Icons like React Components\nimport { FaTimes } from 'react-icons/fa'\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} \n            onDoubleClick= {() => onToggle(task.id)}>\n            <h3>\n                {task.description} \n                <FaTimes \n                style = {{color: 'red'}}\n                // Why does it call all of them if\n                // you don't make this an anonymous func?\n                onClick = {() => onDelete(task.id)} />\n            </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task","import Task from './Task'\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n    return (\n        <>\n            {tasks.map((task) => (\n            <Task key = {task.id} task = {task} \n            onDelete = {onDelete}\n            onToggle = {onToggle}/>\n            ))}\n        </>\n    )\n}\n\nexport default Tasks","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n    const [description, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!description) {\n            alert('Please add a task.')\n            return\n        }\n\n        onAdd({ description, day, reminder })\n\n        setText('')\n        setDay('')\n        setReminder(false);\n    }\n\n    return (\n        <form className = 'add-form' onSubmit = {onSubmit}>\n            <div className = 'form-control'>\n                <label>Task</label>\n                <input type = 'text' \n                    placeholder = 'Add Task' \n                    value = {description} \n                    onChange = {(e) => setText(e.target.value)} />\n            </div>\n            <div className = 'form-control'>\n                <label>Day & Time</label>\n                <input type = 'text' \n                    placeholder = 'Add Day & Time' \n                    value = {day} \n                    onChange = {(e) => setDay(e.target.value)}/>\n            </div>\n            <div className = 'form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type = 'checkbox'\n                checked = {reminder}\n                value = {reminder}\n                onChange = {(e) => setReminder(e.currentTarget.checked)}/>\n            </div>\n\n            <input type = 'submit' value = 'Save Task'\n            className='btn btn-block' />\n        </form>\n    )\n}\n\nexport default AddTask","//import React from 'react'\nimport { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nconst App = () => {\n  // Making the state global here so all components can access this.\n  // \"States get passed down, actions get passed up.\"\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    console.log(data)\n    return data\n  }\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      // Go through each task, if it matches id\n      // 1. Leave all properties the same, except change reminder\n      // 2. Else just return task unchanged.\n      tasks.map((task) => task.id === id ? \n      { ...task, reminder: !task.reminder } : task));\n  }\n\n  // Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    //console.log(newTask);\n    setTasks([...tasks, newTask])\n  }\n\n  // Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n  return (\n    <div className=\"container\">\n      <Header onAdd = {() => setShowAddTask(!showAddTask)}\n      showAdd = {showAddTask}\n      title = \"Task App\"\n      />\n      {showAddTask && <AddTask onAdd = {addTask}/>}\n      {/* Ternary used to show if no more tasks are left. */}\n      {tasks.length > 0 ? ( <Tasks tasks={tasks} \n      onDelete = {deleteTask}\n      onToggle = {toggleReminder}/>\n      ) : ('No tasks to show.') }\n    </div>\n  );\n}\n\n// Class implementation for react components...\n// class App extends React.Component {\n//   render() {\n//     return (\n//       <h1>Class implementation</h1>\n//     )\n//   }\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}